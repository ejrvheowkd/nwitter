{"version":3,"sources":["fBase.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageServie","storage","Profile","refreshUser","userObj","history","useHistory","useState","displayName","newDisplayName","setNewDisplayName","onSubmit","event","a","preventDefault","updateProfile","className","onChange","value","target","type","autoFocus","placeholder","style","marginTop","onClick","signOut","push","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","required","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","attachmentUrl","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","toggleEditing","update","src","class","faTrash","faPencilAlt","NweetFactory","nweet","setNweet","attachment","setAttachment","ref","child","uid","uuidv4","attachmentRef","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","data","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","currentUser","args","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70a796d7.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\n\r\nexport const dbService = firebase.firestore();\r\n\r\nexport const storageServie = firebase.storage();","import { authService } from \"fBase\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst Profile = ({ refreshUser,userObj }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n          target: { value },\r\n        } = event;\r\n        setNewDisplayName(value);\r\n      };\r\n      const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.displayName !== newDisplayName) {\r\n          await userObj.updateProfile({\r\n            displayName: newDisplayName,\r\n          });\r\n          setNewDisplayName(\"\");\r\n          refreshUser();\r\n        }\r\n    };\r\n    return ( \r\n      <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          autoFocus\r\n          placeholder=\"Display name\"\r\n          value={newDisplayName}\r\n          className=\"formInput\"\r\n          />\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Update Profile\"\r\n            className=\"formBtn\"\r\n            style={{\r\n              marginTop: 10,\r\n            }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n    );\r\n};\r\nexport default Profile;","import { authService } from \"fBase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst AuthForm =() =>{\r\n    const [email,setEmail] = useState(\"\");\r\n    const [password,setPassword] = useState(\"\");\r\n    const [newAccount,setNewAccount] = useState(true);\r\n    const [error,setError] = useState(\"\");\r\n    const onChange = (event) =>{\r\n        const {target:{name,value}} =event;\r\n        if(name===\"email\")\r\n        {   \r\n            setEmail(value);\r\n        }\r\n        else if(name===\"password\")\r\n        {\r\n            setPassword(value);\r\n        }\r\n    };\r\n    const onSubmit=async(event)=>{\r\n        let data;\r\n        event.preventDefault();//새로고침을 막고 event 사용 안하면 사라짐 정보\r\n        try{\r\n        if(newAccount){\r\n             data =await authService.createUserWithEmailAndPassword(email,password);\r\n        } else {\r\n             data = await authService.signInWithEmailAndPassword(email,password);    \r\n        }\r\n        } catch(error){\r\n        setError(error.message);\r\n        }\r\n    };\r\n    const toggleAccount = () => setNewAccount((prev)=>!prev);\r\n\r\nreturn (\r\n    <>\r\n    <form onSubmit={onSubmit} className=\"container\">\r\n            <input name =\"email\" type=\"email\" placeholder=\"email\" required value={email} onChange={onChange} className=\"authInput\"/>\r\n            <input name = \"password\" type=\"password\" placeholder=\"Possword\" required value={password} onChange={onChange} className=\"authInput\"/>\r\n            <input type=\"submit\"  className=\"authInput authSubmit\" value={newAccount?\"Create Account\":\"Log In\"}/>\r\n            {error && <span className=\"authError\">{error}</span>}\r\n        </form>\r\n        <span onClick={toggleAccount} className=\"authSwitch\">\r\n            {newAccount?\"Sign In\":\"Create Account\"}</span>\r\n        </>\r\n);\r\n}\r\n\r\nexport default AuthForm;","import AuthForm from \"components/AuthForm\";\r\nimport React from \"react\";\r\nimport { authService, firebaseInstance } from \"../fBase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nconst Auth = ()=>{\r\n    const onSocialClick = async(event) =>{\r\n        const {target:{name}} = event;\r\n        let provider;\r\n        if(name=== \"google\"){\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        }\r\n        else if(name===\"github\")\r\n        {\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        await authService.signInWithPopup(provider);\r\n    };\r\n    return(\r\n        <div className=\"authContainer\">\r\n        <FontAwesomeIcon\r\n          icon={faTwitter}\r\n          color={\"#04AAFF\"}\r\n          size=\"3x\"\r\n          style={{ marginBottom: 30 }}\r\n        />\r\n        <AuthForm/>\r\n        <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} /></button>\r\n          <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} /></button>\r\n        </div>\r\n    </div>)\r\n    ;\r\n}\r\nexport default Auth; ","import { dbService, storageServie } from \"fBase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner, attachmentUrl }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"Are you sure\");\r\n        if (ok) {\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            await storageServie.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n        else {\r\n\r\n        }\r\n    };\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text: newNweet\r\n        });\r\n        setEditing(false);\r\n    };\r\n    const onChange = (event) => {\r\n        const { target: { value } } = event;\r\n        setNewNweet(value);\r\n    }\r\n    return (\r\n        <div className=\"nweet\">\r\n            {editing ?\r\n                <>\r\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                        <input type=\"text\" placeholder=\"Edit\" value={newNweet} required onChange={onChange} autoFocus className=\"formInput\" />\r\n                        <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n                    </form>\r\n                    <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                        Cancel\r\n          </span>\r\n                </>\r\n                :\r\n                <>\r\n                    <h5>{nweetObj.text}</h5>\r\n                    {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n                    {isOwner &&(\r\n                            <div class=\"nweet__actions\">\r\n                                <span onClick={onDeleteClick}>\r\n                                    <FontAwesomeIcon icon={faTrash} />\r\n                                </span>\r\n                                <span onClick={toggleEditing}>\r\n                                    <FontAwesomeIcon icon={faPencilAlt} />\r\n                                </span>\r\n                            </div>\r\n            )}\r\n                </>\r\n                    }\r\n                </div>\r\n)};\r\n\r\nexport default Nweet;","import { dbService, storageServie } from \"fBase\";\r\nimport React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n    const onSubmit = async (event) => {\r\n        if (nweet === \"\") {\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if (attachment !== \"\") {\r\n            const attachmentRef = await storageServie.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const nweetObj = {\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl\r\n        }\r\n\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n    const onChange = (event) => {\r\n        const { target: { value } } = event;\r\n        setNweet(value);\r\n    }\r\n\r\n    const onFileChange = (event) => {\r\n        const { target: { files } } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const { currentTarget: { result } } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    }\r\n    const onClearAttachment = () => {\r\n        setAttachment(\"\");\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                    className=\"factoryInput__input\"\r\n                    value={nweet}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"What's on your mind?\"\r\n                    maxLength={120}\r\n                />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label for=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                    opacity: 0,\r\n                }} />\r\n\r\n            {attachment &&\r\n                <div className=\"factoryForm__attachment\">\r\n                    <img\r\n                        src={attachment}\r\n                        style={{\r\n                            backgroundImage: attachment,\r\n                        }}\r\n                    />\r\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>\r\n            }\r\n\r\n        </form>\r\n    );\r\n}\r\nexport default NweetFactory;","import Nweet from \"components/Nweet\";\r\nimport { dbService, storageServie } from \"fBase\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home =({userObj})=>{\r\n    const [nweets,setNweets] = useState([]);\r\n    useEffect(()=>{\r\n        dbService.collection(\"nweets\").onSnapshot((snapshot)=>{\r\n            const nweetArray = snapshot.docs.map(doc=>({id:doc.id,...doc.data()}));\r\n            setNweets(nweetArray);\r\n                })\r\n    },[]);\r\n    \r\n    return (\r\n    <div className=\"container\">\r\n        <NweetFactory userObj={userObj}/>\r\n        <div style={{ marginTop: 30 }}>\r\n            {nweets.map((nweet)=>(\r\n           <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId===userObj.uid}/>\r\n            ))}\r\n        </div>\r\n    </div>\r\n    );\r\n};\r\nexport default Home;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({userObj}) =>(\r\n<nav>\r\n<ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n        <Link to=\"/\" style={{ marginRight: 10 }}>\r\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n        </Link>\r\n        </li>\r\n        <li>\r\n        <Link\r\n          to=\"/profile\"\r\n          style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n        <span style={{ marginTop: 10 }}>\r\n          {userObj.displayName\r\n            ? `${userObj.displayName}의 Profile`\r\n            : \"Profile\"}\r\n        </span>\r\n      </Link>\r\n        </li>\r\n    </ul>\r\n</nav>\r\n);\r\n\r\nexport default Navigation;","import React from \"react\";\r\nimport {HashRouter as Router,Route,Switch} from \"react-router-dom\"\r\nimport Profile from \"routes/Profile\";\r\nimport Auth from \"../routes/Auth\"\r\nimport Home from \"../routes/Home\";\r\nimport Navigation from \"./Navigation\";\r\nconst AppRouter = ({refreshUser,isLoggedIn,userObj}) => {\r\n\r\nreturn(\r\n<Router>\r\n    {isLoggedIn && <Navigation userObj = {userObj}/>}\r\n    <Switch>\r\n        {isLoggedIn ?(\r\n         <div\r\n         style={{\r\n           maxWidth: 890,\r\n           width: \"100%\",\r\n           margin: \"0 auto\",\r\n           marginTop: 80,\r\n           display: \"flex\",\r\n           justifyContent: \"center\",\r\n         }}\r\n       >\r\n        <Route exact path=\"/\">\r\n            <Home userObj={userObj}/>\r\n        </Route>\r\n        <Route exact path=\"/profile\">\r\n            <Profile refreshUser={refreshUser} userObj={userObj} />\r\n        </Route>\r\n        {/*<Redirect from=\"*\" to=\"/\"/>*/}\r\n        </div> ):( \r\n        <Route exact path=\"/\">\r\n            <Auth/>\r\n        </Route>)\r\n        }\r\n    </Switch>\r\n</Router>\r\n)\r\n};\r\n\r\nexport default AppRouter;","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"./Router\";\nimport {aushService} from \"fBase\";\nimport { authService } from \"../fBase\";\n\nfunction App() {\n  const [init,setInit] = useState(false);\n  const [isLoggedIn,setIsLoggedIn] = useState(false);\n  const [userObj,setUserObj] = useState(null);\n  useEffect(()=>{\n    //변화가 있는지 듣는 구간\n    authService.onAuthStateChanged((user)=>{\n      if(user){\n        setIsLoggedIn(true);\n        setUserObj({\n          displayName:authService.currentUser.displayName,\n          uid:user.uid,\n          updateProfile:(args)=>user.updateProfile(args)\n        });\n      }\n      else{\n        setIsLoggedIn(false);\n      }\n      setInit(true); \n    });\n  },[]);\n  const refreshUser = () =>{\n    const user = authService.currentUser;\n    setUserObj({\n      displayName:authService.currentUser.displayName,\n      uid:user.uid,\n      updateProfile:(args)=>user.updateProfile(args)\n    });\n  }\n  return (\n    <>\n  {init?<AppRouter refreshUser={refreshUser}isLoggedIn={isLoggedIn} userObj={userObj}/>:\"Inittializing...\"}\n  <footer>&copy;Nwitter{new Date().getFullYear()}</footer>\n  </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}